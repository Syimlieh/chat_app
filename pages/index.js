import Head from "next/head";
import styles from "../styles/Home.module.css";
import io from "socket.io-client";
import { useState, useEffect } from "react";
import { useSession, signIn, signOut } from "next-auth/react";
import { useRouter } from "next/router";
import Template from "@/components/Template";
import TopNavbar from "@/components/nav/TopNavbar";
import Chats from "@/components/chats/Chats";
import SearchInput from "@/components/chats/SearchInput";
import DisplayMessage from "@/components/chats/DisplayMessage";
let socket;

export default function Home() {
  const [username, setUsername] = useState("");
  const [chosenUsername, setChosenUsername] = useState("");
  const [message, setMessage] = useState("");
  const [messages, setMessages] = useState([
    {
      author: "",
      message: "",
    },
  ]);
  const { status } = useSession();
  const router = useRouter();
  const socketInitializer = async () => {
    // We just call it because we don't need anything else out of it
    await fetch("/api/socket");

    socket = io();
    socket.on("newIncomingMessage", (msg) => {
      setMessages((currentMsg) => [
        ...currentMsg,
        { author: msg.author, message: msg.message },
      ]);
    });
  };

  const sendMessage = async () => {
    socket.emit("createdMessage", { author: chosenUsername, message });
    setMessages((currentMsg) => [
      ...currentMsg,
      { author: chosenUsername, message },
    ]);
    setMessage("");
  };
  useEffect(() => {
    socketInitializer();
  }, []);

  const handleKeypress = (e) => {
    //it triggers by pressing the enter key
    if (e.keyCode === 13) {
      if (message) {
        sendMessage();
      }
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <meta
          name="google-site-verification"
          content="EFU9D6XpiSejTgyiMfgklatCJHoKwe1sfQKWgrUhfd4"
        />
      </Head>
      <TopNavbar />
      <div className="flex">
        <div className="mx-16 w-[30%] ">
          <SearchInput />
          <Chats />
        </div>
        <div className="w-3/5">
          <DisplayMessage />
        </div>
      </div>
      {/* <Template /> */}
      {/* <div className="flex items-center p-4 mx-auto min-h-screen justify-center bg-purple-500"> */}

      {/* <main className="gap-4 flex flex-col items-center justify-center w-full h-full">
          {!chosenUsername ? (
            <>
              <h3 className="font-bold text-white text-xl">
                How people should call you?
              </h3>
              <input
                type="text"
                placeholder="Identity..."
                value={username}
                className="p-3 rounded-md outline-none"
                onChange={(e) => setUsername(e.target.value)}
              />
              <button
                onClick={() => {
                  setChosenUsername(username);
                }}
                className="bg-white rounded-md px-4 py-2 text-xl"
              >
                Go!
              </button>
            </>
          ) : (
            <>
              <p className="font-bold text-white text-xl">
                Your username: {username}
              </p>
              <div className="flex flex-col justify-end bg-white h-[20rem] min-w-[33%] rounded-md shadow-md ">
                <div className="h-full last:border-b-0 overflow-y-scroll">
                  {messages.map((msg, i) => {
                    return (
                      <div
                        className="w-full py-1 px-2 border-b border-gray-200"
                        key={i}
                      >
                        {msg.author} : {msg.message}
                      </div>
                    );
                  })}
                </div>
                <div className="border-t border-gray-300 w-full flex rounded-bl-md">
                  <input
                    type="text"
                    placeholder="New message..."
                    value={message}
                    className="outline-none py-2 px-2 rounded-bl-md flex-1"
                    onChange={(e) => setMessage(e.target.value)}
                    onKeyUp={handleKeypress}
                  />
                  <div className="border-l border-gray-300 flex justify-center items-center  rounded-br-md group hover:bg-purple-500 transition-all">
                    <button
                      className="group-hover:text-white px-3 h-full border border-blue-100"
                      onClick={() => {
                        sendMessage();
                      }}
                    >
                      Send
                    </button>
                  </div>
                </div>
              </div>
            </>
          )}
        </main> */}
      {/* </div> */}
    </div>
  );
}
